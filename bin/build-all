#!/bin/bash

set -ex

ROOT_DIR=$(cd $(dirname $(dirname $0)) && pwd)
OUT_DIR=$ROOT_DIR/out

build() {
    local os=$1
    local arch=$2

    GOOS=$os GOARCH=$arch go build -ldflags "-s -w" -o $ROOT_DIR/out/sl .
    
    for f in sl; do
        nf="$f-$os-$arch"
        if [ "$os" == "windows" ]; then
            nf="$nf.exe"
        fi

        mv $OUT_DIR/$f "$OUT_DIR/$nf"
    done
}

echo "Generating i18n resource file ..."
if [[ "$OSTYPE" == "msys"* ]]; then
    # For SO windows
    ./bin/go-bindata.exe -pkg resources -o plugin/resources/i18n_resources.go plugin/i18n/resources
else
    ./bin/go-bindata -pkg resources -o plugin/resources/i18n_resources.go plugin/i18n/resources
fi
echo "Done."


echo "Building Binaries ..."
# disable CGO for Linux
CGO_ENABLED=0 build linux amd64
CGO_ENABLED=0 build linux 386
CGO_ENABLED=0 build linux arm64

build darwin amd64
build darwin arm64

build linux ppc64le
build linux s390x

build windows amd64
build windows 386

echo "Generating binary hases ..."
shasum $ROOT_DIR/out/sl-*